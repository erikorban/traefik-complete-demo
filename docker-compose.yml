version: '3.7'

services:
  traefik:
    image: traefik:v2.1
    container_name: traefik
    hostname: traefik
    ports:
      - 80:80
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/traefik.yml:ro
      
  whoami:
      image: containous/whoami
      container_name: whoami
      hostname: whoami
      labels:
        - traefik.enable=true
        - traefik.http.routers.whoami.entrypoints=web
        - traefik.http.routers.whoami.rule=Host(`whoami.$MY_DOMAIN`)

  reactapp:
    container_name: reactapp
    hostname: reactapp
    build:
      context: ./reactapp
      dockerfile: Dockerfile.prod
    labels:
      - traefik.enable=true
      - traefik.http.routers.reactapp.entrypoints=web
      - traefik.http.routers.reactapp.rule=Host(`reactapp.$MY_DOMAIN`)

  webapi:
    container_name: webapi
    build:
      context: ./webapi
      dockerfile: Dockerfile.prod
    environment:
      - MESSAGE=SERRVICE 1
    labels:
      - traefik.enable=true
      - traefik.http.routers.webapi.entrypoints=web
      - traefik.http.routers.webapi.rule=Host(`api.$MY_DOMAIN`)
      - traefik.http.services.webapi.loadbalancer.server.port=80

  webapi2:
    container_name: webapi2
    build:
      context: ./webapi
      dockerfile: Dockerfile.prod
    environment:
      - MESSAGE=SERRVICE 2
    labels:
      - traefik.enable=true
      - traefik.http.routers.webapi.entrypoints=web
      - traefik.http.routers.webapi.rule=Host(`api.$MY_DOMAIN`)
      - traefik.http.services.webapi.loadbalancer.server.port=80

networks:
  default:
    external:
      name: $DEFAULT_NETWORK